apiVersion: v1
kind: Secret
metadata:
  name: order-secrets
type: Opaque
data:
  auth-secret: c2VjcmV0

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order
  template:
    metadata:
      labels:
        app: order
    spec:
      initContainers:
        - name: init-checks-order
          image: rovilay/ecommerce-service-init-checks
          env:
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secrets
                  key: username
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secrets
                  key: password
            - name: RABBITMQ_HOST
              value: my-rabbitmq-srvc
            - name: RABBITMQ_PORT
              value: '5672'
            - name: RABBITMQ_URL
              value: "amqp://$(RABBITMQ_DEFAULT_USER):$(RABBITMQ_DEFAULT_PASS)@$(RABBITMQ_HOST):$(RABBITMQ_PORT)"
            - name: REDIS_HOST
              value: order-redis-srvc
            - name: REDIS_PORT
              value: '6379'
            - name: REDIS_URL
              value: "$(REDIS_HOST):$(REDIS_PORT)"
          command: ["./bin/main"]
        - name: init-migration-order
          image: rovilay/ecommerce-db-migration
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: password
            - name: POSTGRES_DB
              value: ecommerce
            - name: POSTGRES_HOST
              value: db-postgres-srvc
            - name: POSTGRES_PORT
              value: '5432'
            - name: DB_URL
              value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)?sslmode=disable"
          command: ["/bin/sh", "-c"]
          args:
          - |
            # Wait for the PostgreSQL server to start
            until pg_isready -h $(POSTGRES_HOST) -U $(POSTGRES_USER) -d $(POSTGRES_DB) -t 3; do
              echo "Waiting for PostgreSQL..."
              sleep 2
            done

            # Run database migrations
            ./bin/migration
      containers:
        - name: order
          image: rovilay/ecommerce-order-service:latest
          env:
            - name: ORDER_SERVER_PORT
              value: '3001'
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: password
            - name: POSTGRES_DB
              value: ecommerce
            - name: POSTGRES_HOST
              value: db-postgres-srvc
            - name: POSTGRES_PORT
              value: '5432'
            - name: DB_URL
              value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)?sslmode=disable"
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secrets
                  key: username
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secrets
                  key: password
            - name: RABBITMQ_HOST
              value: my-rabbitmq-srvc
            - name: RABBITMQ_PORT
              value: '5672'
            - name: RABBITMQ_URL
              value: "amqp://$(RABBITMQ_DEFAULT_USER):$(RABBITMQ_DEFAULT_PASS)@$(RABBITMQ_HOST):$(RABBITMQ_PORT)"
            - name: REDIS_HOST
              value: order-redis-srvc
            - name: REDIS_PORT
              value: '6379'
            - name: REDIS_URL
              value: "$(REDIS_HOST):$(REDIS_PORT)"
            - name: USER_AUTH_SECRET
              valueFrom:
                secretKeyRef:
                  name: order-secrets
                  key: auth-secret
            - name: PRODUCT_BASE_URL
              value: "http://product-srvc:3001"
            - name: INVENTORY_BASE_URL
              value: "http://inventory-srvc:3001"
            - name: CART_BASE_URL
              value: "http://cart-srvc:3001"

---

apiVersion: v1
kind: Service
metadata:
  name: order-srvc
spec:
  type: ClusterIP
  selector:
    app: order
  ports:
    - name: order
      protocol: TCP
      port: 3001
      targetPort: 3001
